{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Daten system\u00fcbergreifend bereitstellen","text":"<p> Bereitstellung von Daten<sup>1</sup></p>"},{"location":"#lehrplan-lernfeld","title":"Lehrplan - Lernfeld ...","text":"<p>Der vollst\u00e4ndige Lehrplan als Dokument.</p> <ol> <li> <p>Bild von storyset auf Freepik\u00a0\u21a9</p> </li> </ol>"},{"location":"tasks_cw_38/","title":"Kalenderwoche 38","text":"<p>Gruppeneinteilung Projekte</p> <ul> <li>Die Gruppeneinteilung wird selbst vorgenommen .. jeweils 4 Sch\u00fcler.</li> <li>Die drei Themen werden unter den Gruppen aufgeteilt.</li> </ul> <p>Gruppen nutzen einen gemeinsamen GitHub-Account f\u00fcr Dokumentation</p> <ul> <li>Erstellung eines Mkdocs-Ger\u00fcstes f\u00fcr die Projektdokumentation ... Wiki-Charakter!</li> <li>Jede Gruppe besitzt einen gemeinsamen Github-Account f\u00fcr die Dokumentation. Alle Dinge zum Projekt werden hier gespeichert. <ul> <li>Alle Gruppenmitglieder haben Zugriff auf den Account durchgef\u00fchrt und haben das Passwort (Schl\u00fcssel) f\u00fcr ihren Account sicher verwahrt.</li> <li>Die Dokumentation wird \u00fcber gh-pages als Webseite bereitgestellt.  </li> </ul> </li> </ul> <p>Continous Deployment mit GitHub</p> <p>Die Mkdocs-Dokumentation soll automatisiert in eine Webseite umgesetzt werden.</p> <ul> <li>Diese soll von beliebigen Rechnern mit Windows oder Linux erfolgen k\u00f6nnen. Ein Git-Client wird als vorhanden angenommen.</li> <li>Auf dem Rechner ist keine Mkdocs-Installation verf\u00fcgbar.</li> <li>Die Dokumentation \u00e4ndern Sie mit einem vorhandenen Editor bzw. Dateimanager.</li> <li>Nutzen Sie eine GitHub-Action (Continuous Deployment), um die Mkdocs-Dokumentation als gh-pages-Webseite automatisiert erstellen zu lassen.</li> </ul> <p>Anbinden von Visual-Studio-Projekten an GitHub</p> <ul> <li>Sie nutzen das Visual-Studio-Plugin, um C#-Projekte mit einem git-Repository abzugleichen.</li> </ul> <p>Nutzwertanalyse</p> <p>F\u00fcr das Projekt sind aktuelle Werkzeuge f\u00fcr das automatisierte Bereitstellen von Diensten hinsichtlich der Auswahlkriterien in einer Nutzwertanalyse zu vergleichen. Beispielhaft sind hier Werzeuge wie Docker, Ansible, Vagrant, GitHub, GitLab, Kubernetes, Openshift, OPNsense, IPfire, Google Cloud, Azure genannt. </p> <p>Vorbereitung Schulung der Gruppe Anwendungsentwickler</p> <p>Am 28.09. werden Sie einen Workshop (Kundenschulung) der Gruppe Anwendungsentwickler im Raum B3 vornehmen. Die Schulung erfolgt in drei Modulen. Jede Gruppe ist f\u00fcr die Vorbereitung eines Moduls zust\u00e4ndig. Bereiten Sie die Schulung so vor, dass diese den Charakter einer Kundenschulung besitzt. Die Schulung umfasst dabei 180 Minuten. Die Verteilung der Zeitfenster zwischen den Gruppen kann abgestimmt werden.</p> <p>Organisatorischer Ablauf:</p> <ul> <li>Pro Modul wird die verantwortliche Gruppe in einen oder zwei Moderatoren (Vortrag, Pr\u00e4sentation) und zwei/drei Assistenten aufgeteilt. Die Assistenten stellen w\u00e4hrend des Moduls sicher, dass die Schulungsteilnehmer rasch mitkommen. Die Mitglieder der anderen Gruppe werden zur Partnerarbeit mit je einem Anwendungsentwickler eingeteilt.</li> <li>Folgende drei Module sind abzudecken:<ul> <li>Einf\u00fchrung in Mkdocs, PortableApps, Visual-Studio-Code - Ziel: Alle Teilnehmer haben im Anschluss eine PortableApps-Version zum Starten von Mkdocs, eine eigene Vorlage f\u00fcr eine Mkdocs-Dokumentation und eine \u00dcbersicht \u00fcber den Workflow. <ul> <li>Dateistruktur Mkdocs vorstellen</li> <li>Workflow erkl\u00e4ren</li> <li>Komponenten von Mkdocs vorstellen und gleichzeitig durch Teilnehmer mit erstellen lassen</li> <li>Eigene portable Software in PortableApps integrieren</li> <li>VisualStudio-Code kurz mit Extensions vorstellen</li> </ul> </li> <li>GitHub-Einf\u00fchrung und gh-Pages - Ziel: Alle Teilnehmer haben im Anschluss einen GitHub-Account, ihre Mkdocs-Dokumentation ins Repository eingepflegt und wieder aus dem Remote-Repository gezogen. Ebenso liegt die Mkdocs-Dokumentation als gh-pages-Webseite vor. <ul> <li>Account anlegen</li> <li>Remote-Repository anlegen</li> <li>git-Kommandos auf der Kommandozeile vorstellen</li> <li>Abgleich mit Local-Repository</li> <li>Mkdocs-Vorlage in Remote-Repository                </li> </ul> </li> <li>GitHub-Nutzung mit Continuous-Deployment und Beispielprojekt in C# - Ziel: Jeder Teilnehmer integriert das Continous Deployment in GitHub und integriert ein C#-Projekt in GitHub mit Hilfe von Visual Studio.<ul> <li>GitHub-Action vorstellen</li> <li>Mkdocs-Dokumentation automatisiert erstellen</li> <li>C#-Projekt kurz vorstellen</li> <li>C#-Projekt als GitHub-Repository</li> </ul> </li> </ul> </li> </ul>"},{"location":"test/","title":"\u00dcberschrift 1","text":"<p>uefseuifseifh</p>"},{"location":"test/#zweiter-ordnung","title":"zweiter Ordnung","text":"<p>label BSZ-Seite</p>"},{"location":"legal/imprint/","title":"Impressum","text":"Unterrichtshilfe - Berufsschule und Berufliches Gymnasium <p>f\u00fcr die Integration in die schulische (IT-)Projektorganisation in den Unterricht am BSZET Dresden. </p> <p></p> erstellt von <p>Fachbereich Informatik und IT-Systeme</p> <p>BSZ Elektrotechnik Dresden 01219 Dresden Strehlener Platz 2</p> <p>\u00a9 2022</p>"}]}